- Introduction to the Box Model

an important concept to understand how elements are positioned and displayed on a website.

All elements on a web page are interpreted by the browser as "living" inside of a box. 
This is what is meant by the box model.

- The Box Model

The box model comprises the set of properties which define parts of an element that take up space on a web page.

The properties include:

Width and height — specifies the width and height of the content area.
Padding — specifies the amount of space between the content area and the border.
Border — specifies the thickness and style of the border surrounding the content area and padding.
Margin — specifies the amount of space between the border and the outside edge of the element.

- Height and Width

An element's content has two dimensions: a height and a width. 
By default, the dimensions of an HTML box are set to hold the raw contents of the box.

The CSS height and width properties can be used to modify these default dimensions.

p {
  height: 80px;
  width: 240px;
}

- Borders

A border is a line that surrounds an element, like a frame around a painting. 
Borders can be set with a specific width, style, and color.

width — The thickness of the border. 
A border's thickness can be set in pixels or with one of the following keywords: thin, medium, or thick.

style — The design of the border. 
Web browsers can render any of 10 different styles. Some of these styles include: none, dotted, and solid.

color — The color of the border. 
Web browsers can render colors using a few different formats, including 140 built-in color keywords.

p {
  border: 3px solid coral;
}

The default border is medium none color, where color is the current color of the element.

- Border Radius

Thanks to CSS, a border doesn't have to be square.

You can modify the corners of an element's border box with the border-radius property.

div.container {
  border: 3px solid rgb(22, 77, 100);
  border-radius: 5px;
}

You can create a border that is a perfect circle by setting the radius equal to the height of the box, or to 100%.

- Padding I

The space between the contents of a box and the borders of a box is known as padding. 
In CSS, you can modify this space with the padding property.

p.content-header {
  border: 3px solid coral;
  padding: 10px;
}

The code in this example puts 10 pixels of space between the content of the paragraph (the text) and the borders, on all four sides.
The padding property is often used to expand the background color and make content look less cramped.

If you want to be more specific about the amount of padding on each side of a box's content, you can use the following properties:

padding-top
padding-right
padding-bottom
padding-left

- Padding II

Another implementation of the padding property lets you specify exactly how much padding there should be on each side of the content in a single declaration.

p.content-header {
  border: 3px solid grey;
  padding: 6px 11px 4px 9px;
}

In order, it specifies the amount of padding on the top (6 pixels), right (11 pixels), bottom (4 pixels), and left (9 pixels) sides of the content.

When using this implementation of the padding property, we must specify a padding value for all four sides of the element.

However, if the top and bottom values for padding will equal each other, and the left and right values for padding will also equal each other, 
you can use the following shortcut:

p.content-header {
  padding: 5px 10px;
}

The first value, 5px, sets the padding value for the top and bottom sides of the content. 
The second value, 10px, sets the padding value for the left and right sides of the content.

- Margins I

Margin refers to the space directly outside of the box. The margin property is used to specify the size of this space.

p {
  border: 1px solid aquamarine;
  margin: 20px;
}

The code in the example above will place 20 pixels of space on the outside of the paragraph's box on all four sides. 
This means that other HTML elements on the page cannot come within 20 pixels of the paragraph's border.

If you want to be even more specific about the amount of margin on each side of a box, you can use the following properties:

margin-top
margin-right
margin-bottom
margin-left

- Margins II

A similar implementation of the margin property is used to specify exactly how much margin there should be on each side of the box in a single declaration.

p {
  margin: 6px 10px 5px 12px;
}

In order, it specifies the amount of margin on the top (6 pixels), right (10 pixels), bottom (5 pixels), and left (12 pixels) sides of the box.

when you're certain that the top and bottom values for margin will equal each other, and that the left and right values for margin will also equal each other, 
you can use the following shortcut:

p {
  margin: 6px 12px;
}

- Auto

The margin property also lets you center content. However, you must follow a few syntax requirements

In order to center an element, a width must be set for that element. 
Otherwise, the width of the div will be automatically set to the full width of its containing element, like the <body>, for example. 
It's not possible to center an element that takes up the full width of the page.

div.headline {
  width: 400px;
  margin: 0 auto;
}

 The 0 sets the top and bottom margins to 0 pixels. 
 The auto value instructs the browser to adjust the left and right margins until the element is centered within its containing element.





